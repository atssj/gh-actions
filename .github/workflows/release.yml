name: Release

on:
  push:
    tags:
      - 'v*'
      - '*/v*'

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.check.outputs.valid }}
      action_name: ${{ steps.check.outputs.action }}
    steps:
      - name: Check tag format
        id: check
        run: |
          TAG=${{ github.ref_name }}
          if [[ $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Repository tag
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "action=repo" >> $GITHUB_OUTPUT
          elif [[ $TAG =~ ^([^/]+)/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            # Action tag
            ACTION="${BASH_REMATCH[1]}"
            if [ -d "actions/$ACTION" ]; then
              echo "valid=true" >> $GITHUB_OUTPUT
              echo "action=$ACTION" >> $GITHUB_OUTPUT
            else
              echo "valid=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

  release:
    needs: validate-tag
    if: needs.validate-tag.outputs.is_valid == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          echo "### Changelog" > CHANGES.md
          echo "" >> CHANGES.md
          git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"* %s" >> CHANGES.md
          
          if [[ "${{ needs.validate-tag.outputs.action_name }}" != "repo" ]]; then
            ACTION="${{ needs.validate-tag.outputs.action_name }}"
            if [ -d "actions/$ACTION" ]; then
              cat CHANGES.md >> "actions/$ACTION/CHANGELOG.md"
            fi
          fi
          
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          cat CHANGES.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
